// Ограничение времени	- 2 секунды
// Ограничение памяти	- 64Mb
// Ввод	- стандартный ввод или input.txt
// Вывод	- стандартный вывод или output.txt

// Раунд плей-офф между двумя командами состоит из двух матчей. Каждая команда проводит по одному матчу «дома» и «в гостях».
// Выигрывает команда, забившая большее число мячей. Если же число забитых мячей совпадает, выигрывает команда,
// забившая больше мячей «в гостях». Если и это число мячей совпадает, матч переходит в дополнительный тайм или серию пенальти.

// Вам дан счёт первого матча, а также счёт текущей игры (которая ещё не завершилась).
// Помогите комментатору сообщить, сколько голов необходимо забить первой команде, чтобы победить,
// не переводя игру в дополнительное время.

// Формат ввода
// В первой строке записан счёт первого мачта в формате G1:G2, где G1 — число мячей, забитых первой командой, а G2 — число мячей,
// забитых второй командой.

// Во второй строке записан счёт второго (текущего) матча в аналогичном формате. Все числа в записи счёта не превышают 5.

// В третьей строке записано число 1, если первую игру первая команда провела «дома», или 2, если «в гостях».

// Формат вывода
// Выведите единственное целое число "— необходимое количество мячей.

// Пример 1
// Ввод
// 0:0
// 0:0
// 1
// Вывод
// 1

// Пример 2
// Ввод
// 0:2
// 0:3
// 1
// Вывод
// 5

// Пример 3
// Ввод
// 0:2
// 0:3
// 2
// Вывод
// 6

// Язык: Node.js 20.10.0

const fs = require("fs");

let fileContent = fs.readFileSync("input.txt", "utf8");
const lines = fileContent.trim().split("\n");

let [A1, B1] = lines[0].split(":").map(Number);

let [A2, B2] = lines[1].split(":").map(Number);

let where = Number(lines[2]);

const totalA = A1 + A2;

const totalB = B1 + B2;

let goalsNeeded = 0;

if (totalB >= totalA) {
  const differenceA = totalB - totalA;

  A2 = A2 + differenceA;
  if ((where === 1 && B1 < A2) || (where !== 1 && B2 < A1)) {
    goalsNeeded = differenceA;
  } else {
    goalsNeeded = differenceA + 1;
  }
}

fs.writeFileSync("output.txt", goalsNeeded.toString());
